apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubellm-webapp
  namespace: kubellm
  labels:
    app.kubernetes.io/name: kubellm-webapp
    app.kubernetes.io/component: webapp
    app.kubernetes.io/part-of: kubellm
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubellm-webapp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubellm-webapp
        app.kubernetes.io/component: webapp
        app.kubernetes.io/part-of: kubellm
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: webapp
        image: ghcr.io/bryaneanders/kubellm-webapp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: APP_SERVER_HOST
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: APP_SERVER_HOST
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: WEBAPP_PORT
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: API_URL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: kubellm-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: DB_PASSWORD
        - name: ANTHROPIC_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: ANTHROPIC_KEY
        - name: OPENAI_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: OPENAI_KEY
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}